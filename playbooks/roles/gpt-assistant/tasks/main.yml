---
- name: Disable git owernship check
  community.general.git_config:
    name: safe.directory
    scope: global
    value: "{{ app_folder }}"

- name: Clone repository
  git:
    repo: "{{ git_repo_url }}"
    dest: "{{ app_folder }}"
    force: yes
  register: git_output

- name: Set ownership of app folder
  become: true
  file:
    path: "{{ app_folder }}"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    recurse: yes
  when: git_output.changed

- name: Copy .env file
  template:
    src: templates/.env.j2
    dest: "{{ app_folder }}/.env"

- name: Copy gunicorn_conf.py file
  template:
    src: templates/gunicorn_conf.py.j2
    dest: "{{ app_folder }}/gunicorn_conf.py"

- name: "Config poetry"
  become_user: "{{ app_user }}"
  shell:
    cmd: "{{ poetry_path }} config virtualenvs.in-project true"

- name: Install application dependencies
  become_user: "{{ app_user }}"
  shell:
    cmd: "{{ poetry_path }} install -E server"
    chdir: "{{ app_folder }}"

- name: Copy systemd conf
  template:
    src: templates/systemd.conf.j2
    dest: /etc/systemd/system/{{ app_name }}.service

- name: Check {{ app_name }} service status
  become: true
  systemd:
    name: "{{ app_name }}"
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Configure NGINX
  become_user: "{{ app_user }}"
  template:
    src: templates/nginx.conf.j2
    dest: "/etc/nginx/sites-available/{{ app_name }}"

- name: Create symbolic link for Nginx site
  file:
    src: "/etc/nginx/sites-available/{{ app_name }}"
    dest: "/etc/nginx/sites-enabled/{{ app_name }}"
    state: link
  notify:
    - Reload NGINX
